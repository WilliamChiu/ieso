{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Ajv from 'ajv';\nimport { getSession } from 'next-auth/client';\nimport post from '../../schemas/post';\nimport { MongoClient } from 'mongodb';\nconst uri = \"mongodb://mongo:27017\";\nconst client = new MongoClient(uri);\nconst ajv = new Ajv();\nconst validate = ajv.compile(post);\nexport default (async (req, res) => {\n  const session = await getSession({\n    req\n  });\n\n  if (session) {\n    // Signed in\n    let valid = validate(req.body.formData);\n    if (!valid) res.status(422);else {\n      await client.connect();\n      const database = client.db(\"posts\");\n      const collection = database.collection(\"posts\");\n      await collection.insertOne(_objectSpread({\n        username: session.user.name,\n        timestamp: Date.now()\n      }, req.body.formData));\n      res.status(201);\n    }\n  } else {\n    // Not Signed in\n    res.status(401);\n  }\n\n  res.end();\n});","map":{"version":3,"sources":["/usr/src/app/pages/api/post.js"],"names":["Ajv","getSession","post","MongoClient","uri","client","ajv","validate","compile","req","res","session","valid","body","formData","status","connect","database","db","collection","insertOne","username","user","name","timestamp","Date","now","end"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AACA,MAAMC,MAAM,GAAG,IAAIF,WAAJ,CAAgBC,GAAhB,CAAf;AAEA,MAAME,GAAG,GAAG,IAAIN,GAAJ,EAAZ;AACA,MAAMO,QAAQ,GAAGD,GAAG,CAACE,OAAJ,CAAYN,IAAZ,CAAjB;AAEA,gBAAe,OAAOO,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMC,OAAO,GAAG,MAAMV,UAAU,CAAC;AAAEQ,IAAAA;AAAF,GAAD,CAAhC;;AACA,MAAIE,OAAJ,EAAa;AACX;AACA,QAAIC,KAAK,GAAGL,QAAQ,CAACE,GAAG,CAACI,IAAJ,CAASC,QAAV,CAApB;AACA,QAAI,CAACF,KAAL,EAAYF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAZ,KACK;AACH,YAAMV,MAAM,CAACW,OAAP,EAAN;AACA,YAAMC,QAAQ,GAAGZ,MAAM,CAACa,EAAP,CAAU,OAAV,CAAjB;AACA,YAAMC,UAAU,GAAGF,QAAQ,CAACE,UAAT,CAAoB,OAApB,CAAnB;AACA,YAAMA,UAAU,CAACC,SAAX;AAAsBC,QAAAA,QAAQ,EAACV,OAAO,CAACW,IAAR,CAAaC,IAA5C;AAAkDC,QAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAA7D,SAA4EjB,GAAG,CAACI,IAAJ,CAASC,QAArF,EAAN;AACAJ,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACD;AACF,GAXD,MAWO;AACL;AACAL,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACD;;AACDL,EAAAA,GAAG,CAACiB,GAAJ;AACD,CAlBD","sourcesContent":["import Ajv from 'ajv';\nimport { getSession } from 'next-auth/client'\nimport post from '../../schemas/post'\nimport { MongoClient } from 'mongodb'\n\nconst uri = \"mongodb://mongo:27017\";\nconst client = new MongoClient(uri);\n\nconst ajv = new Ajv()\nconst validate = ajv.compile(post)\n\nexport default async (req, res) => {\n  const session = await getSession({ req })\n  if (session) {\n    // Signed in\n    let valid = validate(req.body.formData)\n    if (!valid) res.status(422)\n    else {\n      await client.connect()\n      const database = client.db(\"posts\")\n      const collection = database.collection(\"posts\")\n      await collection.insertOne({username:session.user.name, timestamp: Date.now(), ...req.body.formData})\n      res.status(201)\n    }\n  } else {\n    // Not Signed in\n    res.status(401)\n  }\n  res.end()\n}"]},"metadata":{},"sourceType":"module"}